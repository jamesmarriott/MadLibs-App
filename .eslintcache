[{"C:\\Web\\xmas\\src\\index.js":"1","C:\\Web\\xmas\\src\\App.js":"2","C:\\Web\\xmas\\src\\Footer.js":"3","C:\\Web\\xmas\\src\\helpers\\InputTypes.js":"4","C:\\Web\\xmas\\src\\components\\form\\form.js":"5","C:\\Web\\xmas\\src\\components\\header\\header.js":"6","C:\\Web\\xmas\\src\\components\\footer\\footer.js":"7","C:\\Web\\xmas\\src\\helpers\\getRandomWord.js":"8","C:\\Web\\xmas\\src\\helpers\\apiCaller.js":"9"},{"size":242,"mtime":1620125353475,"results":"10","hashOfConfig":"11"},{"size":1604,"mtime":1620145050115,"results":"12","hashOfConfig":"11"},{"size":251,"mtime":1617177562475,"results":"13","hashOfConfig":"11"},{"size":1382,"mtime":1620112616733,"results":"14","hashOfConfig":"11"},{"size":2798,"mtime":1620125349651,"results":"15","hashOfConfig":"11"},{"size":488,"mtime":1620116709186,"results":"16","hashOfConfig":"11"},{"size":393,"mtime":1620116882966,"results":"17","hashOfConfig":"11"},{"size":472,"mtime":1620121588439,"results":"18","hashOfConfig":"11"},{"size":193,"mtime":1620118284187,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"41nw27",{"filePath":"23","messages":"24","errorCount":3,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Web\\xmas\\src\\index.js",[],["42","43"],"C:\\Web\\xmas\\src\\App.js",["44","45","46","47","48","49"],"C:\\Web\\xmas\\src\\Footer.js",[],["50","51"],"C:\\Web\\xmas\\src\\helpers\\InputTypes.js",[],"C:\\Web\\xmas\\src\\components\\form\\form.js",["52","53","54","55","56","57","58","59","60","61"],"import React, { useState, useEffect } from \"react\"\r\nimport { Card, Col, Container, Form, Button, FormGroup } from \"react-bootstrap\"\r\nimport { InputTypes } from \"../../helpers/InputTypes.js\"\r\n// import { getRandomWord } from \"../../helpers/getRandomWord.js\"\r\n\r\nexport default function FormDisplay ({ madLibTitle, imageURL, madLibText, randWordList, subWords, ...other }) {\r\n\r\n  const madLibTextArray = Array.from(madLibText.split(\" \"))\r\n  const [userInput] = useState({enterNewWord: \"\"})\r\n  const [madLib, setMadLib] = useState()\r\n  const [madTextDisplay, setMadTextDisplay] = useState([madLibTextArray])\r\n  const [isMadDisplayed, setIsMadDisplayed] = useState(false)\r\n  const [isRandomActive, setIsRandomActive] = useState(false)\r\n  const [isApiLoading, setIsApiLoading] = useState(true)\r\n\r\n  const toggleMad = () => setIsMadDisplayed(!isMadDisplayed)\r\n\r\n  function handleChange(event, sub) {\r\n    const {name, value} = event.target\r\n    setMadLib(prevInput =>\r\n      ({ ...prevInput,\r\n        [name]: value})\r\n      )\r\n    setMadTextDisplay(prevDisplay => {\r\n      const newDisplay = [...prevDisplay]\r\n      newDisplay[0][sub.InpPos-1] = value + sub.TrailingPunct\r\n      return newDisplay\r\n    })\r\n  }\r\n\r\n function formSubmit(event, target) {\r\n\r\n    \r\n    console.log(event.value)\r\n    // check all the boxes are filled\r\n    // if not tell the user to complete form\r\n    // disble button until all completed\r\n    // then use router display madlib\r\n  }\r\n\r\n  const fillFormRandom = () => setIsRandomActive(!isRandomActive)\r\n\r\n  function getRandomWord(sub) {\r\n    let randWord = \"\"\r\n    Object.values(randWordList).map(value => {\r\n      if (value.id === sub) {\r\n        const randomIndex = Math.floor(Math.random() * value.words.length)\r\n        randWord = value.words[randomIndex]\r\n      }\r\n    })\r\n  return randWord\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={formSubmit}>\r\n      <FormGroup role=\"wordentry\">\r\n          <Form.Row className='align-items-center'>\r\n              {Object.values(subWords).map(sub=>\r\n                  <Col xs=\"auto\">\r\n                    <Form.Control \r\n                    size=\"lg\"\r\n                    key=\"sub.SubId\"\r\n                    type=\"text\"\r\n                    name={sub.SubId}\r\n                    defaultValue={getRandomWord(sub.InpType)}\r\n                    value={isRandomActive ? getRandomWord(sub.InpType) : null}\r\n                    placeHolder={InputTypes(sub.InpType)}\r\n                    onChange={(e) => {handleChange(e, sub)}}\r\n                  />\r\n                </Col>\r\n              )}\r\n          </Form.Row>\r\n          <Button className=\"btn btn-primary btn-large centerButton\" type=\"submit\">Get Mad!</Button>\r\n          <Button variant=\"info\" onClick={fillFormRandom}>Randomize!</Button>\r\n        </FormGroup>\r\n      </form>\r\n    )\r\n  }","C:\\Web\\xmas\\src\\components\\header\\header.js",["62"],"import { Card, Container } from \"react-bootstrap\"\r\nimport React from 'react'\r\n\r\nexport default function Header ({ madLibTitle, ...other }) {\r\n  return (\r\n    <>\r\n      <Card.Header>\r\n      <h1>MadLibz!</h1>\r\n        <p>Enter words - adjectives, nouns etc. - using the form below and click 'Create' to make a funny story.</p>\r\n      </Card.Header>\r\n      <br/>\r\n      <Card.Header>\r\n      <h2 style={{fontStyle: 'italic'}}>{madLibTitle}</h2>\r\n      <br/>\r\n    </Card.Header>\r\n  </>\r\n  )\r\n}","C:\\Web\\xmas\\src\\components\\footer\\footer.js",[],"C:\\Web\\xmas\\src\\helpers\\getRandomWord.js",["63"],"C:\\Web\\xmas\\src\\helpers\\apiCaller.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":10,"column":10,"nodeType":"70","messageId":"71","endLine":10,"endColumn":19},{"ruleId":"68","severity":1,"message":"72","line":14,"column":10,"nodeType":"70","messageId":"71","endLine":14,"endColumn":22},{"ruleId":"68","severity":1,"message":"73","line":14,"column":24,"nodeType":"70","messageId":"71","endLine":14,"endColumn":39},{"ruleId":"74","severity":2,"message":"75","line":32,"column":40,"nodeType":"76","endLine":32,"endColumn":44},{"ruleId":"74","severity":2,"message":"77","line":33,"column":37,"nodeType":"76","endLine":33,"endColumn":41},{"ruleId":"74","severity":2,"message":"78","line":34,"column":43,"nodeType":"76","endLine":34,"endColumn":53},{"ruleId":"64","replacedBy":"79"},{"ruleId":"66","replacedBy":"80"},{"ruleId":"68","severity":1,"message":"81","line":1,"column":27,"nodeType":"70","messageId":"71","endLine":1,"endColumn":36},{"ruleId":"68","severity":1,"message":"82","line":2,"column":10,"nodeType":"70","messageId":"71","endLine":2,"endColumn":14},{"ruleId":"68","severity":1,"message":"83","line":2,"column":21,"nodeType":"70","messageId":"71","endLine":2,"endColumn":30},{"ruleId":"68","severity":1,"message":"84","line":9,"column":10,"nodeType":"70","messageId":"71","endLine":9,"endColumn":19},{"ruleId":"68","severity":1,"message":"85","line":10,"column":10,"nodeType":"70","messageId":"71","endLine":10,"endColumn":16},{"ruleId":"68","severity":1,"message":"86","line":11,"column":10,"nodeType":"70","messageId":"71","endLine":11,"endColumn":24},{"ruleId":"68","severity":1,"message":"72","line":14,"column":10,"nodeType":"70","messageId":"71","endLine":14,"endColumn":22},{"ruleId":"68","severity":1,"message":"73","line":14,"column":24,"nodeType":"70","messageId":"71","endLine":14,"endColumn":39},{"ruleId":"68","severity":1,"message":"87","line":16,"column":9,"nodeType":"70","messageId":"71","endLine":16,"endColumn":18},{"ruleId":"88","severity":1,"message":"89","line":45,"column":43,"nodeType":"90","messageId":"91","endLine":45,"endColumn":45},{"ruleId":"68","severity":1,"message":"83","line":1,"column":16,"nodeType":"70","messageId":"71","endLine":1,"endColumn":25},{"ruleId":"88","severity":1,"message":"89","line":7,"column":42,"nodeType":"90","messageId":"91","endLine":7,"endColumn":44},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'apiCaller' is defined but never used.","Identifier","unusedVar","'isApiLoading' is assigned a value but never used.","'setIsApiLoading' is assigned a value but never used.","react/jsx-no-undef","'Home' is not defined.","JSXIdentifier","'Form' is not defined.","'MadDisplay' is not defined.",["92"],["93"],"'useEffect' is defined but never used.","'Card' is defined but never used.","'Container' is defined but never used.","'userInput' is assigned a value but never used.","'madLib' is assigned a value but never used.","'madTextDisplay' is assigned a value but never used.","'toggleMad' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]